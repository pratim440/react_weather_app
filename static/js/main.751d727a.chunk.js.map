{"version":3,"sources":["assets/video.mp4","Components/Input.jsx","Components/Card.jsx","Components/Background.jsx","Components/App.jsx","index.js"],"names":["module","exports","Input","props","useState","inputValue","setInputValue","id","autoComplete","type","placeholder","onChange","event","target","value","Button","variant","color","onClick","onSearch","Card","date","Date","toLocaleDateString","time","toLocaleTimeString","src","img","alt","cityName","countryName","temp","min_temp","max_temp","Background","autoPlay","muted","loop","bgVideo","App","icon","setIcon","city","setCity","country","setCountry","setTemp","minTemp","setMinTemp","maxTemp","setMaxTemp","getData","val","a","axios","get","res","console","log","data","name","weather","sys","main","temp_min","temp_max","alert","useEffect","fetch","then","json","catch","error","ReactDOM","render","document","getElementById"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,8LCoB5BC,EAhBD,SAACC,GAAW,IAAD,EACeC,mBAAS,IADxB,mBACdC,EADc,KACFC,EADE,KAQzB,OACI,yBAAKC,GAAG,kBACJ,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,YAAY,kBAAkBH,GAAG,QAAQI,SAR9D,SAACC,GAClBN,EAAcM,EAAMC,OAAOC,QAO4EA,MAAOT,IAC9G,kBAACU,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAN9B,WAChB,OAAOf,EAAMgB,SAASd,KAK8C,kBAAC,IAAD,S,iBCM7De,EAlBF,SAACjB,GACV,IAAIkB,GAAO,IAAIC,MAAOC,qBAClBC,GAAO,IAAIF,MAAOG,qBACtB,OACI,yBAAKlB,GAAG,iBACJ,yBAAKA,GAAG,OAAOmB,IAAKvB,EAAMwB,IAAKC,IAAI,QACnC,wBAAIrB,GAAG,QAAO,kBAAC,IAAD,CAAgBA,GAAG,aAAcJ,EAAM0B,SAArD,KAAiE1B,EAAM2B,aACvE,wBAAIvB,GAAG,QAAQc,EAAf,MAAwBG,GACxB,wBAAIjB,GAAG,QAAQJ,EAAM4B,KAArB,UACA,yBAAKxB,GAAG,WACJ,4BAAKJ,EAAM6B,SAAX,gBACA,iCACA,4BAAK7B,EAAM8B,SAAX,mB,kCCJDC,EARI,WACf,OACI,2BAAOC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAAC9B,GAAG,WAC1B,4BAAQmB,IAAKY,IAAS7B,KAAK,gBCwDxB8B,EAzDH,WAAO,IAAD,EACUnC,qBADV,mBACPoC,EADO,KACDC,EADC,OAEUrC,qBAFV,mBAEPsC,EAFO,KAEDC,EAFC,OAGgBvC,qBAHhB,mBAGPwC,EAHO,KAGEC,EAHF,OAIUzC,qBAJV,mBAIP2B,EAJO,KAIDe,EAJC,OAKgB1C,qBALhB,mBAKP2C,EALO,KAKEC,EALF,OAMgB5C,qBANhB,mBAMP6C,EANO,KAMEC,EANF,KAORC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEUC,IAAMC,IAAN,4DAA+DH,EAA/D,yDAFV,OAEFI,EAFE,OAGRC,QAAQC,IAAIF,EAAIG,KAAKC,MACrBnB,EAAQe,EAAIG,KAAKE,QAAQ,GAAGrB,MAC5BG,EAAQa,EAAIG,KAAKC,MACjBf,EAAWW,EAAIG,KAAKG,IAAIlB,SACxBE,EAAQU,EAAIG,KAAKI,KAAKhC,MACtBiB,EAAWQ,EAAIG,KAAKI,KAAKC,UACzBd,EAAWM,EAAIG,KAAKI,KAAKE,UATjB,kDAYRC,MAAM,uBAZE,0DAAH,sDAiCb,OAlBJC,qBAAU,WACNC,MAAM,kHACLC,MAAK,SAACb,GACH,OAAOA,EAAIc,UAEdD,MAAK,SAACV,GACHF,QAAQC,IAAIC,EAAKC,MACjBnB,EAAQkB,EAAKE,QAAQ,GAAGrB,MACxBG,EAAQgB,EAAKC,MACbf,EAAWc,EAAKG,IAAIlB,SACpBE,EAAQa,EAAKI,KAAKhC,MAClBiB,EAAWW,EAAKI,KAAKC,UACrBd,EAAWS,EAAKI,KAAKE,aAExBM,OAAM,SAAAC,GACHf,QAAQC,IAAIc,QAElB,IACU,oCACJ,kBAAC,EAAD,MACA,yBAAKjE,GAAG,oBACJ,kBAAC,EAAD,CAAOY,SAAUgC,IACjB,kBAAC,EAAD,CACIxB,IAAG,2CAAsCa,EAAtC,WACHX,SAAUa,EACVZ,YAAac,EACbb,KAAMA,EACNC,SAAUe,EACVd,SAAUgB,O,MClD1BwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.751d727a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.41dce737.mp4\";","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Input = (props) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleChange = (event) => {\n        setInputValue(event.target.value);\n    }\n    const handleClick = () => {\n        return props.onSearch(inputValue);      \n    }\nreturn (\n    <div id=\"inputContainer\">\n        <input autoComplete=\"off\" type=\"text\" placeholder=\"Enter city name\" id=\"input\" onChange={handleChange} value={inputValue}/>\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}><SearchIcon /></Button>\n    </div>\n)\n};\n\nexport default Input;","import React from 'react';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst Card = (props) => {\n    let date = new Date().toLocaleDateString();\n    let time = new Date().toLocaleTimeString();\n    return (\n        <div id=\"cardContainer\">\n            <img id='icon' src={props.img} alt=\"img\"/>\n            <h1 id='city'><LocationOnIcon id='location' />{props.cityName}, {props.countryName}</h1>\n            <h6 id='date'>{date} | {time}</h6>\n            <h1 id='temp'>{props.temp} °C</h1>\n            <div id=\"min_max\">\n                <h3>{props.min_temp} °C (min)</h3>\n                <h3>|</h3>\n                <h3>{props.max_temp} °C (max)</h3>\n            </div>\n        </div>\n    )\n};\n\nexport default Card;","import React from 'react';\nimport bgVideo from './../assets/video.mp4';\n\nconst Background = () => {\n    return(\n        <video autoPlay muted loop id='myVideo'>\n            <source src={bgVideo} type='video/mp4' />\n        </video>\n    )\n};\n\nexport default Background;","import React, { useEffect, useState } from 'react';\nimport Input from './Input';\nimport Card from './Card';\nimport axios from 'axios';\nimport Background from './Background';\nconst App = () => {\n    const [icon, setIcon] = useState();\n    const [city, setCity] = useState();\n    const [country, setCountry] = useState();\n    const [temp, setTemp] = useState();\n    const [minTemp, setMinTemp] = useState();\n    const [maxTemp, setMaxTemp] = useState();\n    const getData = async (val) => {\n        try {\n            const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${val}&units=metric&appid=ef38631b1bb45a62c45f109c04dc8fdc`)\n            console.log(res.data.name);\n            setIcon(res.data.weather[0].icon);\n            setCity(res.data.name);\n            setCountry(res.data.sys.country);\n            setTemp(res.data.main.temp);\n            setMinTemp(res.data.main.temp_min);\n            setMaxTemp(res.data.main.temp_max);\n        }\n        catch(error) {\n            alert(\"Invalid city name !\");\n        }\n    }\nuseEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=tinsukia&units=metric&appid=ef38631b1bb45a62c45f109c04dc8fdc`)\n    .then((res) => {\n        return res.json();\n    })\n    .then((data) => {\n        console.log(data.name);\n        setIcon(data.weather[0].icon);\n        setCity(data.name);\n        setCountry(data.sys.country);\n        setTemp(data.main.temp);\n        setMinTemp(data.main.temp_min);\n        setMaxTemp(data.main.temp_max);\n    })\n    .catch(error => {\n        console.log(error);\n    });\n},[]);\n    return (<>\n        <Background />\n        <div id=\"overallContainer\">\n            <Input onSearch={getData} />\n            <Card \n                img={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n                cityName={city}\n                countryName={country}\n                temp={temp}\n                min_temp={minTemp}\n                max_temp={maxTemp}\n            />\n        </div>\n        </>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}